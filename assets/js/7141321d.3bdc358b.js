"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[234],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return g}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=r,m=u["".concat(s,".").concat(g)]||u[g]||p[g]||i;return n?o.createElement(m,a(a({ref:t},d),{},{components:n})):o.createElement(m,a({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3996:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],l={sidebar_position:4},s="Logging",c={unversionedId:"operations/logging",id:"operations/logging",isDocsHomePage:!1,title:"Logging",description:"Recommended Components",source:"@site/docs/operations/logging.md",sourceDirName:"operations",slug:"/operations/logging",permalink:"/nodejs-reference-architecture/operations/logging",editUrl:"https://github.com/nodeshift/nodejs-reference-architecture/docs/operations/logging.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Health Checks",permalink:"/nodejs-reference-architecture/operations/healthchecks"},next:{title:"Metrics",permalink:"/nodejs-reference-architecture/operations/metrics"}},d=[{value:"Recommended Components",id:"recommended-components",children:[{value:"Footnotes:",id:"footnotes",children:[]}]}],p={toc:d};function u(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"logging"},"Logging"),(0,i.kt)("h2",{id:"recommended-components"},"Recommended Components"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pino - ",(0,i.kt)("a",{parentName:"li",href:"http://getpino.io/#/"},"http://getpino.io/#/"))),(0,i.kt)("p",null,"Pino provides an easily consumed API, structured logging and good performance\nwhich makes it well suited to cloud native deployments were more complicated\nAPIs/features are not required as log output is simply written to standard out\nIt has a respective level of weekly npm downloads (495k as of Nov 2019)\nand is growing. It was inspired by Bunyan which no longer seems to be maintained\nand is a good migration option."),(0,i.kt)("h1",{id:"guidance"},"Guidance"),(0,i.kt)("p",null,"Pino ",(0,i.kt)("a",{parentName:"p",href:"http://getpino.io/#/"},"http://getpino.io/#/")," is the recommended log framework for Node.js due\nto its easily consumed API, structured json logging by default\nand good performance."),(0,i.kt)("p",null,"When deploying Pino we have the following additional recommendations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Send logs to standard out and use log aggregation tools to collect\nlogs across processes, containers and applications. All log processing\nshould be done in a separate process."),(0,i.kt)("li",{parentName:"ul"},"Plan for a final resting place for log data. After 7 days migrate\nlog data to a lower cost storage (manual retrieval is likely ok)."),(0,i.kt)("li",{parentName:"ul"},"Add code to your application in order to allow logger.level\nto be set through an Environment variable so that can be easily\nchanged in container environments."),(0,i.kt)("li",{parentName:"ul"},"Use the ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/pinojs/pino/blob/HEAD/docs/redaction.md"},"redaction"),"\noption to ensure sensitive data is not logged. Do note that this implementation\ndoes not allow one to dynamically add fields to be redacted ",(0,i.kt)("sup",null,(0,i.kt)("a",{parentName:"li",href:"#footnote1"},"1")),"."),(0,i.kt)("li",{parentName:"ul"},"Limit the use of warn, error, and fatal levels to information\nwhich must always be logged."),(0,i.kt)("li",{parentName:"ul"},"Limit the use of info level to important information which can\nalways be logged without introducing significant overhead."),(0,i.kt)("li",{parentName:"ul"},"Don't throw and catch multiple errors, throw once and catch/log at the\nhighest level,"),(0,i.kt)("li",{parentName:"ul"},"When catching errors at a high level, log the error.stack unless the thrown error\ntype is known and expected."),(0,i.kt)("li",{parentName:"ul"},"Every source file should utilize Pino's child method off of the common logger\ninstance, passing in { file: module } to make the source file path is part of\nthe log.")),(0,i.kt)("h3",{id:"footnotes"},"Footnotes:"),(0,i.kt)("a",{name:"footnote1"},"1"),": If you require ability to dynamically append what is redacted (like values read from a secret-storage like Vault), one can implement redacting logic inside a Pino [logMethod](https://getpino.io/#/docs/api?id=logmethod) to filter the message string and objects.")}u.isMDXComponent=!0}}]);